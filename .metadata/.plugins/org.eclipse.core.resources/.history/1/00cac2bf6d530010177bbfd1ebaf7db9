package com.ef.banner.usuarios.model;

import java.time.LocalDate;

import com.fasterxml.jackson.annotation.JsonFormat;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.persistence.*;
import lombok.*;

@Entity
@Table(name = "usuarios")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Schema(description = "Entidad que representa a un usuario del sistema.")
public class Usuario {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Schema(description = "ID único del usuario", example = "1")
	private Long id;

	@Column(nullable = false)
	@Schema(description = "Nombre completo del usuario", example = "Juan Pérez")
	private String nombreCompleto;

	@Column(nullable = false, unique = true)
	@Schema(description = "Correo electrónico del usuario. Debe ser único.", example = "juan.perez@mail.com")
	private String correo;

	@Column(nullable = false)
	@Schema(description = "Contraseña del usuario (se almacena hasheada)", example = "$2a$10$...")
	private String password;

	@Column(nullable = false, unique = true)
	@Schema(description = "DNI del usuario. Debe ser único.", example = "12345678")
	private String dni;

	@JsonFormat(pattern = "yyyy-MM-dd")
	@Schema(description = "Fecha de nacimiento del usuario", example = "2000-05-15")
	private LocalDate fechaNacimiento;

	@Column(nullable = false)
	@Schema(description = "Dirección del usuario", example = "Av. Los Álamos 345, Lima")
	private String direccion;

	@Column(nullable = false)
	@Schema(description = "Teléfono del usuario", example = "987654321")
	private String telefono;
	
    
	@Enumerated(EnumType.STRING)
	@Column(nullable = false)
	@Schema(description = "Rol del usuario en el sistema", example = "ESTUDIANTE")
	private Rol rol;

	public enum Rol {
		ESTUDIANTE, PROFESOR, ADMIN
	}
}
